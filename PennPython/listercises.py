# -*- coding: utf-8 -*-
"""listercises.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_DgxQxnm8ebbscTkEJO6aB2VnbD-hF8M
"""

#1
def ones_digits(l):
  return [i % 10 if i > 0 else (i*-1)%10 for i in l]

#2
def lengths_of(l):
  return [len(i) for i in l]

#3
def filter_odd_lengths(l):
  return [i for i in l if len(i)%2 == 1]

#4
def filter_upper(l):
  return [i for i in l if i.isupper()]

#5
def list_all(l):
  if len(l) == 0:
    return False
  for i in l:
    if i == False:
      return False
  return True

#6
def list_any(l):
  for i in l:
    if i == True:
      return True
  return False

#7
def immutable_replicate(l, n):
  return l*n

#8
def mutable_replicate(l, n):
  l *= n
  return l

#9
def at_least(l, s, n):
  return l.count(s) >= n

def main():
  print(ones_digits([321, 49120, 9112]))
  print(lengths_of(["hello", "world", "!"]))
  print(filter_odd_lengths(["hello", "me", "aa"]))
  print(filter_upper(["HI", "hi", "Hi"]))
  # print(list_all([True, True, False]))
  # print(list_all([True, True, True]))
  # print(list_any([False, True]))
  # print(list_any([False, False]))

main()

